{"version":3,"file":"src_components_Modal_tsx.js","mappings":"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","sources":["webpack://modal-app/./src/components/Modal.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Button from \"@mui/material/Button\";\nimport { Observable } from \"windowed-observable\";\nimport { TextareaAutosize, Box } from \"@mui/material\";\nimport { Activity, Project, Category } from \"../interfaces/interfaces\";\nimport { Paper } from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport enUS from \"date-fns/locale/en-US\";\nimport { MuiPickersUtilsProvider, Calendar } from \"@material-ui/pickers\";\nimport { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\n\nconst stateObservable = new Observable(\"modal-state\");\nconst titleObservable = new Observable(\"modal-title\");\nconst apiObservable = new Observable(\"api-observable\");\nconst activityToClone = new Observable(\"activity-to-clone\");\nconst activityToUpdate = new Observable(\"activity-to-update\");\n\nexport default function FormDialog(props: any) {\n  const { projects, apiFunction } = props;\n  const [open, setOpen] = React.useState(false);\n  const [message, setMessage] = React.useState(\"\");\n  const [project, setProject] = React.useState<string>(\"Delivery\");\n  const [category, setCategory] = React.useState(\"Available\");\n  const [comments, setComments] = React.useState<string>(\"\");\n  const [hours, setHours] = React.useState<number>(0);\n  const [ticket, setTicket] = React.useState<string>(\"\");\n  const [oneDate, setOneDate] = React.useState(new Date().toISOString());\n  const [activityId, setActivityId] = React.useState<string>(\"\");\n  const [cloneDates, setCloneDates] = React.useState<Date[]>([]);\n  const [selectedDate, setSelectedDate] = React.useState<MaterialUiPickersDate>(new Date());\n  const [currentProject, setCurrentProject] = React.useState<Project>({\n    AccountName: \"\",\n    ProjectAccountID: 0,\n    ProjectID: 0,\n    ProjectName: \"\",\n    ProjectCategories: [],\n    ProjectColor: \"\",\n    ProjectStartDate: \"\",\n    ProjectEndDate: \"\",\n    ProjectIsActive: false,\n  });\n  React.useEffect(() => {\n    stateObservable.subscribe((state: boolean): void => {\n      setOpen(state);\n    });\n    titleObservable.subscribe((title: string) => {\n      setMessage(title);\n    });\n    activityToClone.subscribe((activity: Activity) => {\n      setProject(activity.ProjectName);\n      setCategory(activity.CategoryName);\n      setOneDate(activity.ActivityDate);\n      setHours(activity.value);\n      setTicket(activity.Task);\n      setComments(activity.Comments);\n    });\n    activityToUpdate.subscribe((activity: Activity) => {\n      setProject(activity.ProjectName);\n      setCategory(activity.CategoryName);\n      setOneDate(activity.ActivityDate);\n      setHours(activity.value);\n      setTicket(activity.Task);\n      setComments(activity.Comments);\n      setActivityId(activity._id ? activity._id : \"\");\n    });\n  });\n\n  React.useEffect(() => {\n    changeByProject();\n  }, [project]);\n\n  const handleClose = () => {\n    stateObservable.publish(false);\n  };\n\n  let arr: Date[] = [];\n  const handleDateChange = (date: MaterialUiPickersDate) => {\n    // setSelectedDate(date);\n    // arr.push(selectedDate);\n    // setCloneDates(arr);\n    console.log(date);\n  };\n\n  const handleClick = () => {\n    if (currentProject && category) {\n      const newActivity: Activity = {\n        AccountName: currentProject.AccountName,\n        ActivityDate: oneDate,\n        ActivityID: currentProject.ProjectID,\n        CategoryName: category,\n        Comments: comments,\n        EmployeeID: 0,\n        ProjectColor: currentProject.ProjectColor,\n        ProjectID: currentProject.ProjectID,\n        ProjectName: currentProject.ProjectName,\n        StepID: 0,\n        Task: ticket,\n        TypeID: 0,\n        value: hours,\n        activeInProject: currentProject.ProjectIsActive,\n      };\n      if (\n        message === \"Create multiple activities\" ||\n        message === \"Create activity\"\n      ) {\n        apiFunction({\n          path: \"nova-api/activities\",\n          method: \"POST\",\n          body: newActivity,\n        })\n          .then((res: any) => {\n            console.log(res);\n            apiObservable.publish(\"post\");\n          })\n          .catch((err: any) => console.log(err));\n      } else if (message === \"Update Activity\") {\n        apiFunction({\n          path: `nova-api/activities/${activityId}`,\n          method: \"PUT\",\n          body: newActivity,\n        })\n          .then((res: any) => {\n            console.log(res);\n            apiObservable.publish(\"put\");\n          })\n          .catch((err: any) => console.log(err));\n      } else if (message === \"Clone Activity\") {\n        console.log(\"React está muy feo :(\");\n      }\n    }\n  };\n\n  const handleChangeP = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setProject(event.target.value);\n  };\n  const handleChangeC = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCategory(event.target.value);\n  };\n\n  const changeByProject = () => {\n    const filterProject = projects.filter(\n      (option: Project) => option.ProjectName === project\n    );\n    setCurrentProject(filterProject[0]);\n  };\n\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>{message}</DialogTitle>\n        <DialogContent>\n          <DialogContentText\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              m: \"auto\",\n              width: \"60vw\",\n            }}\n          >\n            <TextField\n              sx={{\n                margin: 2,\n              }}\n              id=\"outlined-select-currency-native\"\n              select\n              label=\"Project\"\n              value={project}\n              onChange={handleChangeP}\n              SelectProps={{\n                native: true,\n              }}\n            >\n              {projects.map((option: Project) => (\n                <option key={option.ProjectID} value={option.ProjectName}>\n                  {option.ProjectIsActive ? option.ProjectName : \"\"}\n                </option>\n              ))}\n            </TextField>\n            <TextField\n              sx={{\n                margin: 2,\n              }}\n              id=\"outlined-select-currency-native\"\n              select\n              label=\"Category\"\n              value={category}\n              onChange={handleChangeC}\n              SelectProps={{\n                native: true,\n              }}\n            >\n              {currentProject.ProjectCategories.map((category: Category) => (\n                <option key={category.CategoryID} value={category.CategoryName}>\n                  {category.CategoryName ? category.CategoryName : \"\"}\n                </option>\n              ))}\n            </TextField>\n\n            <label htmlFor=\"date\" style={{ marginLeft: 15 }}>\n              Select the date\n            </label>\n            <input\n              style={{ marginLeft: 15, marginBottom: 5 }}\n              type=\"date\"\n              id=\"date\"\n              name=\"trip-start\"\n              value={oneDate.split(\"T\")[0]}\n              onChange={(e) => setOneDate(new Date(e.target.value).toISOString())}\n            />\n\n            <TextField\n              sx={{\n                margin: 2,\n              }}\n              id=\"outlined-number\"\n              label=\"Hours\"\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(e) => setHours(parseInt(e.target.value))}\n              value={hours}\n            ></TextField>\n            <TextField\n              sx={{\n                margin: 2,\n              }}\n              id=\"filled-helperText\"\n              label=\"Ticket\"\n              variant=\"outlined\"\n              onChange={(e) => setTicket(e.target.value)}\n              value={ticket}\n            ></TextField>\n            <TextareaAutosize\n              style={{\n                height: 50,\n                width: 790,\n                marginLeft: 15,\n                marginBottom: 10,\n              }}\n              placeholder=\"Description\"\n              onChange={(e) => setComments(e.target.value)}\n              value={comments}\n            />\n          </DialogContentText>\n          <Button\n            style={{ marginLeft: 15 }}\n            variant=\"outlined\"\n            onClick={() => {\n              handleClick();\n              handleClose();\n            }}\n          >\n            Guardar\n          </Button>\n        </DialogContent>\n      </Dialog>\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={enUS}>\n        <Paper style={{ overflow: \"hidden\" }}>\n          <Calendar\n            date={selectedDate}\n            onChange={handleDateChange}\n          />\n        </Paper>\n      </MuiPickersUtilsProvider>\n    </div>\n  );\n}\n"],"names":["React","TextField","Dialog","DialogContent","DialogContentText","DialogTitle","Button","Observable","TextareaAutosize","Paper","DateFnsUtils","enUS","MuiPickersUtilsProvider","Calendar","stateObservable","titleObservable","apiObservable","activityToClone","activityToUpdate","FormDialog","props","projects","apiFunction","useState","open","setOpen","message","setMessage","project","setProject","category","setCategory","comments","setComments","hours","setHours","ticket","setTicket","Date","toISOString","oneDate","setOneDate","activityId","setActivityId","cloneDates","setCloneDates","selectedDate","setSelectedDate","AccountName","ProjectAccountID","ProjectID","ProjectName","ProjectCategories","ProjectColor","ProjectStartDate","ProjectEndDate","ProjectIsActive","currentProject","setCurrentProject","useEffect","subscribe","state","title","activity","CategoryName","ActivityDate","value","Task","Comments","_id","changeByProject","handleClose","publish","arr","handleDateChange","date","console","log","handleClick","newActivity","ActivityID","EmployeeID","StepID","TypeID","activeInProject","path","method","body","then","res","catch","err","handleChangeP","event","target","handleChangeC","filterProject","filter","option","display","flexDirection","m","width","margin","native","map","CategoryID","marginLeft","marginBottom","split","e","shrink","parseInt","height","overflow"],"sourceRoot":""}